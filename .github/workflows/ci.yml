name: CI
on: [push, pull_request]
jobs:
  ci:
    runs-on: windows-latest
    steps:
      - name: Install Cygwin Git
        uses: egor-tensin/setup-cygwin@v2
        with:
          packages: git
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load packages to install
        id: cyg-package-list
        run: |
          $pkgs = Get-Content -Path .\build-requires.txt
          echo "::set-output name=packages::$pkgs"
      - name: Install Cygwin build requirements
        uses: egor-tensin/setup-cygwin@v2
        with:
          packages: ${{ steps.cyg-package-list.outputs.packages }}
      - name: Generate cygcheck output
        run: |
          C:\tools\cygwin\bin\bash.exe -c 'cygcheck -srv >/var/log/cygcheck.out'
        if: always()
      - name: Store Chocolatey logs
        uses: actions/upload-artifact@v2
        with:
          name: choco-logs
          path: 'C:\ProgramData\chocolatey\logs\'
        if: always()
      - name: Store Cygwin logs
        uses: actions/upload-artifact@v2
        with:
          name: cygwin-logs
          path: 'C:\tools\cygwin\var\log\'
        if: always()
      - name: Cygport download
        run: |
          C:\tools\cygwin\bin\bash.exe -c 'cygport asciidoc.cygport download'
      - name: Cygport prep
        run: |
          C:\tools\cygwin\bin\bash.exe -c 'cygport asciidoc.cygport prep'
      - name: Cygport compile
        run: |
          C:\tools\cygwin\bin\bash.exe -c 'cygport asciidoc.cygport compile'
      - name: Cygport test
        run: |
          C:\tools\cygwin\bin\bash.exe -c 'cygport asciidoc.cygport test'
      - name: Cygport install
        run: |
          C:\tools\cygwin\bin\bash.exe -c 'cygport asciidoc.cygport install'
      - name: Cygport package
        run: |
          C:\tools\cygwin\bin\bash.exe -c 'cygport asciidoc.cygport package'
      - name: Set up SSH keys
        env:
          MAINTAINER_KEY: ${{ secrets.MAINTAINER_KEY }}
        run: |
          C:\tools\cygwin\bin\bash.exe -c 'umask 0077 && mkdir -p ~/.ssh'
          C:\tools\cygwin\bin\bash.exe -c 'umask 0077 && echo ""$MAINTAINER_KEY"" >~/.ssh/id_rsa'
          C:\tools\cygwin\bin\bash.exe -c 'umask 0077 && echo ""cygwin.com,8.43.85.97 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGqrxexIuyqmCVe33p1HuhUFzsXte5QZKb+BJlsRrvXOpUOJEW2S0kszyAiymeV7AXaYmHDKVRJpGVR+0ua0Xww="" >~/.ssh/known_hosts'
        if: startsWith(github.ref, 'refs/tags/v')
      - name: Cygport upload
        run: |
          C:\tools\cygwin\bin\bash.exe -c 'SSH_KEY=~/.ssh/id_rsa cygport asciidoc.cygport upload'
        if: startsWith(github.ref, 'refs/tags/v')
      - name: Tar up build results
        run: |
          C:\tools\cygwin\bin\bash.exe -c 'tar -caf asciidoc.txz asciidoc-*-*.*/'
        if: always()
      - name: Store build results
        uses: actions/upload-artifact@v2
        with:
          name: build-results
          path: |
            asciidoc.txz
          if-no-files-found: error
        if: always()
